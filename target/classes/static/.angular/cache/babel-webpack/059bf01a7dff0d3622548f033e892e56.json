{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, InjectionToken, Optional, Inject, NgModule } from '@angular/core';\nimport moment from 'moment';\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nclass AddPipe {\n  transform(value, amount, unit) {\n    if (typeof amount === 'undefined' || typeof amount === 'number' && typeof unit === 'undefined') {\n      throw new Error('AddPipe: missing required arguments');\n    }\n\n    return moment(value).add(amount, unit);\n  }\n\n}\n\nAddPipe.ɵfac = function AddPipe_Factory(t) {\n  return new (t || AddPipe)();\n};\n\nAddPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amAdd\",\n  type: AddPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amAdd'\n    }]\n  }], null, null);\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nclass CalendarPipe {\n  constructor(cdRef, ngZone) {\n    this.cdRef = cdRef;\n    this.ngZone = ngZone; // using a single static timer for all instances of this pipe for performance reasons\n\n    CalendarPipe.initTimer(ngZone);\n    CalendarPipe.refs++; // values such as Today will need to be replaced with Yesterday after midnight,\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\n\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\n      this.ngZone.run(() => this.cdRef.markForCheck());\n    });\n  }\n\n  transform(value, ...args) {\n    let formats = null;\n    let referenceTime = null;\n\n    for (let i = 0, len = args.length; i < len; i++) {\n      if (args[i] !== null) {\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\n          formats = args[i];\n        } else {\n          referenceTime = moment(args[i]);\n        }\n      }\n    }\n\n    return moment(value).calendar(referenceTime, formats);\n  }\n\n  ngOnDestroy() {\n    if (CalendarPipe.refs > 0) {\n      CalendarPipe.refs--;\n    }\n\n    if (CalendarPipe.refs === 0) {\n      CalendarPipe.removeTimer();\n    }\n\n    this.midnightSub.unsubscribe();\n  }\n\n  static initTimer(ngZone) {\n    // initialize the timer\n    if (!CalendarPipe.midnight) {\n      CalendarPipe.midnight = new EventEmitter();\n\n      if (typeof window !== 'undefined') {\n        const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\n\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\n          return window.setTimeout(() => {\n            // emit the current date\n            CalendarPipe.midnight.emit(new Date()); // refresh the timer\n\n            CalendarPipe.removeTimer();\n            CalendarPipe.initTimer(ngZone);\n          }, timeToUpdate);\n        });\n      }\n    }\n  }\n\n  static removeTimer() {\n    if (CalendarPipe.timer) {\n      window.clearTimeout(CalendarPipe.timer);\n      CalendarPipe.timer = null;\n      CalendarPipe.midnight = null;\n    }\n  }\n\n  static _getMillisecondsUntilUpdate() {\n    const now = moment();\n    const tomorrow = moment().startOf('day').add(1, 'days');\n    const timeToMidnight = tomorrow.valueOf() - now.valueOf();\n    return timeToMidnight + 1000; // 1 second after midnight\n  }\n\n}\n/**\r\n * Internal reference counter, so we can clean up when no instances are in use\r\n */\n\n\nCalendarPipe.refs = 0;\nCalendarPipe.timer = null;\nCalendarPipe.midnight = null;\n\nCalendarPipe.ɵfac = function CalendarPipe_Factory(t) {\n  return new (t || CalendarPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n};\n\nCalendarPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amCalendar\",\n  type: CalendarPipe,\n  pure: false\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CalendarPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amCalendar',\n      pure: false\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nclass DateFormatPipe {\n  transform(value, ...args) {\n    if (!value) {\n      return '';\n    }\n\n    return moment(value).format(args[0]);\n  }\n\n}\n\nDateFormatPipe.ɵfac = function DateFormatPipe_Factory(t) {\n  return new (t || DateFormatPipe)();\n};\n\nDateFormatPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amDateFormat\",\n  type: DateFormatPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateFormatPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amDateFormat'\n    }]\n  }], null, null);\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nclass DifferencePipe {\n  transform(value, otherValue, unit, precision) {\n    const date = moment(value);\n    const date2 = otherValue !== null ? moment(otherValue) : moment();\n    return date.diff(date2, unit, precision);\n  }\n\n}\n\nDifferencePipe.ɵfac = function DifferencePipe_Factory(t) {\n  return new (t || DifferencePipe)();\n};\n\nDifferencePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amDifference\",\n  type: DifferencePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DifferencePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amDifference'\n    }]\n  }], null, null);\n})();\n\nconst NGX_MOMENT_OPTIONS = new InjectionToken('NGX_MOMENT_OPTIONS');\n\nclass DurationPipe {\n  constructor(momentOptions) {\n    this.allowedUnits = ['ss', 's', 'm', 'h', 'd', 'M'];\n\n    this._applyOptions(momentOptions);\n  }\n\n  transform(value, ...args) {\n    if (typeof args === 'undefined' || args.length !== 1) {\n      throw new Error('DurationPipe: missing required time unit argument');\n    }\n\n    return moment.duration(value, args[0]).humanize();\n  }\n\n  _applyOptions(momentOptions) {\n    if (!momentOptions) {\n      return;\n    }\n\n    if (!!momentOptions.relativeTimeThresholdOptions) {\n      const units = Object.keys(momentOptions.relativeTimeThresholdOptions);\n      const filteredUnits = units.filter(unit => this.allowedUnits.indexOf(unit) !== -1);\n      filteredUnits.forEach(unit => {\n        moment.relativeTimeThreshold(unit, momentOptions.relativeTimeThresholdOptions[unit]);\n      });\n    }\n  }\n\n}\n\nDurationPipe.ɵfac = function DurationPipe_Factory(t) {\n  return new (t || DurationPipe)(i0.ɵɵdirectiveInject(NGX_MOMENT_OPTIONS, 24));\n};\n\nDurationPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amDuration\",\n  type: DurationPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DurationPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amDuration'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NGX_MOMENT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nclass FromUnixPipe {\n  transform(value, ...args) {\n    return typeof value === 'string' ? moment.unix(parseInt(value, 10)) : moment.unix(value);\n  }\n\n}\n\nFromUnixPipe.ɵfac = function FromUnixPipe_Factory(t) {\n  return new (t || FromUnixPipe)();\n};\n\nFromUnixPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amFromUnix\",\n  type: FromUnixPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FromUnixPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amFromUnix'\n    }]\n  }], null, null);\n})();\n\nclass ParsePipe {\n  transform(value, formats) {\n    return moment(value, formats);\n  }\n\n}\n\nParsePipe.ɵfac = function ParsePipe_Factory(t) {\n  return new (t || ParsePipe)();\n};\n\nParsePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amParse\",\n  type: ParsePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ParsePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amParse'\n    }]\n  }], null, null);\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nclass FromUtcPipe {\n  transform(value, formats, ...args) {\n    return formats ? moment.utc(value, formats) : moment.utc(value);\n  }\n\n}\n\nFromUtcPipe.ɵfac = function FromUtcPipe_Factory(t) {\n  return new (t || FromUtcPipe)();\n};\n\nFromUtcPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amFromUtc\",\n  type: FromUtcPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FromUtcPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amFromUtc'\n    }]\n  }], null, null);\n})();\n\nclass IsAfterPipe {\n  transform(value, otherValue, unit) {\n    return moment(value).isAfter(moment(otherValue), unit);\n  }\n\n}\n\nIsAfterPipe.ɵfac = function IsAfterPipe_Factory(t) {\n  return new (t || IsAfterPipe)();\n};\n\nIsAfterPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amIsAfter\",\n  type: IsAfterPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsAfterPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amIsAfter'\n    }]\n  }], null, null);\n})();\n\nclass IsBeforePipe {\n  transform(value, otherValue, unit) {\n    return moment(value).isBefore(moment(otherValue), unit);\n  }\n\n}\n\nIsBeforePipe.ɵfac = function IsBeforePipe_Factory(t) {\n  return new (t || IsBeforePipe)();\n};\n\nIsBeforePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amIsBefore\",\n  type: IsBeforePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IsBeforePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amIsBefore'\n    }]\n  }], null, null);\n})();\n\nclass LocalTimePipe {\n  transform(value) {\n    return moment(value).local();\n  }\n\n}\n\nLocalTimePipe.ɵfac = function LocalTimePipe_Factory(t) {\n  return new (t || LocalTimePipe)();\n};\n\nLocalTimePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amLocal\",\n  type: LocalTimePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalTimePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amLocal'\n    }]\n  }], null, null);\n})();\n\nclass LocalePipe {\n  transform(value, locale) {\n    return moment(value).locale(locale);\n  }\n\n}\n\nLocalePipe.ɵfac = function LocalePipe_Factory(t) {\n  return new (t || LocalePipe)();\n};\n\nLocalePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amLocale\",\n  type: LocalePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amLocale'\n    }]\n  }], null, null);\n})();\n\nclass ParseZonePipe {\n  transform(value) {\n    return moment.parseZone(value);\n  }\n\n}\n\nParseZonePipe.ɵfac = function ParseZonePipe_Factory(t) {\n  return new (t || ParseZonePipe)();\n};\n\nParseZonePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amParseZone\",\n  type: ParseZonePipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ParseZonePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amParseZone'\n    }]\n  }], null, null);\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nclass SubtractPipe {\n  transform(value, amount, unit) {\n    if (typeof amount === 'undefined' || typeof amount === 'number' && typeof unit === 'undefined') {\n      throw new Error('SubtractPipe: missing required arguments');\n    }\n\n    return moment(value).subtract(amount, unit);\n  }\n\n}\n\nSubtractPipe.ɵfac = function SubtractPipe_Factory(t) {\n  return new (t || SubtractPipe)();\n};\n\nSubtractPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amSubtract\",\n  type: SubtractPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SubtractPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amSubtract'\n    }]\n  }], null, null);\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nclass TimeAgoPipe {\n  constructor(cdRef, ngZone) {\n    this.cdRef = cdRef;\n    this.ngZone = ngZone;\n  }\n\n  format(m) {\n    return m.from(moment(), this.lastOmitSuffix);\n  }\n\n  transform(value, omitSuffix, formatFn) {\n    if (this.hasChanged(value, omitSuffix)) {\n      this.lastTime = this.getTime(value);\n      this.lastValue = value;\n      this.lastOmitSuffix = omitSuffix;\n      this.lastLocale = this.getLocale(value);\n      this.formatFn = formatFn || this.format.bind(this);\n      this.removeTimer();\n      this.createTimer();\n      this.lastText = this.formatFn(moment(value));\n    } else {\n      this.createTimer();\n    }\n\n    return this.lastText;\n  }\n\n  ngOnDestroy() {\n    this.removeTimer();\n  }\n\n  createTimer() {\n    if (this.currentTimer) {\n      return;\n    }\n\n    const momentInstance = moment(this.lastValue);\n    const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\n    this.currentTimer = this.ngZone.runOutsideAngular(() => {\n      if (typeof window !== 'undefined') {\n        return window.setTimeout(() => {\n          this.lastText = this.formatFn(moment(this.lastValue));\n          this.currentTimer = null;\n          this.ngZone.run(() => this.cdRef.markForCheck());\n        }, timeToUpdate);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  removeTimer() {\n    if (this.currentTimer) {\n      window.clearTimeout(this.currentTimer);\n      this.currentTimer = null;\n    }\n  }\n\n  getSecondsUntilUpdate(momentInstance) {\n    const howOld = Math.abs(moment().diff(momentInstance, 'minute'));\n\n    if (howOld < 1) {\n      return 1;\n    } else if (howOld < 60) {\n      return 30;\n    } else if (howOld < 180) {\n      return 300;\n    } else {\n      return 3600;\n    }\n  }\n\n  hasChanged(value, omitSuffix) {\n    return this.getTime(value) !== this.lastTime || this.getLocale(value) !== this.lastLocale || omitSuffix !== this.lastOmitSuffix;\n  }\n\n  getTime(value) {\n    if (moment.isDate(value)) {\n      return value.getTime();\n    } else if (moment.isMoment(value)) {\n      return value.valueOf();\n    } else {\n      return moment(value).valueOf();\n    }\n  }\n\n  getLocale(value) {\n    return moment.isMoment(value) ? value.locale() : moment.locale();\n  }\n\n}\n\nTimeAgoPipe.ɵfac = function TimeAgoPipe_Factory(t) {\n  return new (t || TimeAgoPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n};\n\nTimeAgoPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amTimeAgo\",\n  type: TimeAgoPipe,\n  pure: false\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TimeAgoPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amTimeAgo',\n      pure: false\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\nclass UtcPipe {\n  transform(value) {\n    return moment(value).utc();\n  }\n\n}\n\nUtcPipe.ɵfac = function UtcPipe_Factory(t) {\n  return new (t || UtcPipe)();\n};\n\nUtcPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"amUtc\",\n  type: UtcPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UtcPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'amUtc'\n    }]\n  }], null, null);\n})();\n\nconst ANGULAR_MOMENT_PIPES = [AddPipe, CalendarPipe, DateFormatPipe, DifferencePipe, DurationPipe, FromUnixPipe, ParsePipe, SubtractPipe, TimeAgoPipe, UtcPipe, FromUtcPipe, LocalTimePipe, LocalePipe, ParseZonePipe, IsBeforePipe, IsAfterPipe];\n\nclass MomentModule {\n  static forRoot(options) {\n    return {\n      ngModule: MomentModule,\n      providers: [{\n        provide: NGX_MOMENT_OPTIONS,\n        useValue: Object.assign({}, options)\n      }]\n    };\n  }\n\n}\n\nMomentModule.ɵfac = function MomentModule_Factory(t) {\n  return new (t || MomentModule)();\n};\n\nMomentModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MomentModule\n});\nMomentModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentModule, [{\n    type: NgModule,\n    args: [{\n      declarations: ANGULAR_MOMENT_PIPES,\n      exports: ANGULAR_MOMENT_PIPES\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AddPipe, CalendarPipe, DateFormatPipe, DifferencePipe, DurationPipe, FromUnixPipe, FromUtcPipe, IsAfterPipe, IsBeforePipe, LocalTimePipe, LocalePipe, MomentModule, NGX_MOMENT_OPTIONS, ParsePipe, ParseZonePipe, SubtractPipe, TimeAgoPipe, UtcPipe };","map":{"version":3,"sources":["D:/Ght/Thesis/Project/ApprovalProcess/approvalprocess-v2/approval/node_modules/ngx-moment/fesm2015/ngx-moment.mjs"],"names":["i0","Pipe","EventEmitter","InjectionToken","Optional","Inject","NgModule","moment","AddPipe","transform","value","amount","unit","Error","add","ɵfac","ɵpipe","type","args","name","CalendarPipe","constructor","cdRef","ngZone","initTimer","refs","midnightSub","midnight","subscribe","run","markForCheck","formats","referenceTime","i","len","length","isMoment","calendar","ngOnDestroy","removeTimer","unsubscribe","window","timeToUpdate","_getMillisecondsUntilUpdate","timer","runOutsideAngular","setTimeout","emit","Date","clearTimeout","now","tomorrow","startOf","timeToMidnight","valueOf","ChangeDetectorRef","NgZone","pure","DateFormatPipe","format","DifferencePipe","otherValue","precision","date","date2","diff","NGX_MOMENT_OPTIONS","DurationPipe","momentOptions","allowedUnits","_applyOptions","duration","humanize","relativeTimeThresholdOptions","units","Object","keys","filteredUnits","filter","indexOf","forEach","relativeTimeThreshold","undefined","decorators","FromUnixPipe","unix","parseInt","ParsePipe","FromUtcPipe","utc","IsAfterPipe","isAfter","IsBeforePipe","isBefore","LocalTimePipe","local","LocalePipe","locale","ParseZonePipe","parseZone","SubtractPipe","subtract","TimeAgoPipe","m","from","lastOmitSuffix","omitSuffix","formatFn","hasChanged","lastTime","getTime","lastValue","lastLocale","getLocale","bind","createTimer","lastText","currentTimer","momentInstance","getSecondsUntilUpdate","howOld","Math","abs","isDate","UtcPipe","ANGULAR_MOMENT_PIPES","MomentModule","forRoot","options","ngModule","providers","provide","useValue","assign","ɵmod","ɵinj","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, InjectionToken, Optional, Inject, NgModule } from '@angular/core';\nimport moment from 'moment';\n\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\nclass AddPipe {\r\n    transform(value, amount, unit) {\r\n        if (typeof amount === 'undefined' ||\r\n            (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('AddPipe: missing required arguments');\r\n        }\r\n        return moment(value).add(amount, unit);\r\n    }\r\n}\r\nAddPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AddPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nAddPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AddPipe, name: \"amAdd\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AddPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amAdd' }]\r\n        }] });\n\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\nclass CalendarPipe {\r\n    constructor(cdRef, ngZone) {\r\n        this.cdRef = cdRef;\r\n        this.ngZone = ngZone;\r\n        // using a single static timer for all instances of this pipe for performance reasons\r\n        CalendarPipe.initTimer(ngZone);\r\n        CalendarPipe.refs++;\r\n        // values such as Today will need to be replaced with Yesterday after midnight,\r\n        // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\r\n        this.midnightSub = CalendarPipe.midnight.subscribe(() => {\r\n            this.ngZone.run(() => this.cdRef.markForCheck());\r\n        });\r\n    }\r\n    transform(value, ...args) {\r\n        let formats = null;\r\n        let referenceTime = null;\r\n        for (let i = 0, len = args.length; i < len; i++) {\r\n            if (args[i] !== null) {\r\n                if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\r\n                    formats = args[i];\r\n                }\r\n                else {\r\n                    referenceTime = moment(args[i]);\r\n                }\r\n            }\r\n        }\r\n        return moment(value).calendar(referenceTime, formats);\r\n    }\r\n    ngOnDestroy() {\r\n        if (CalendarPipe.refs > 0) {\r\n            CalendarPipe.refs--;\r\n        }\r\n        if (CalendarPipe.refs === 0) {\r\n            CalendarPipe.removeTimer();\r\n        }\r\n        this.midnightSub.unsubscribe();\r\n    }\r\n    static initTimer(ngZone) {\r\n        // initialize the timer\r\n        if (!CalendarPipe.midnight) {\r\n            CalendarPipe.midnight = new EventEmitter();\r\n            if (typeof window !== 'undefined') {\r\n                const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\r\n                CalendarPipe.timer = ngZone.runOutsideAngular(() => {\r\n                    return window.setTimeout(() => {\r\n                        // emit the current date\r\n                        CalendarPipe.midnight.emit(new Date());\r\n                        // refresh the timer\r\n                        CalendarPipe.removeTimer();\r\n                        CalendarPipe.initTimer(ngZone);\r\n                    }, timeToUpdate);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    static removeTimer() {\r\n        if (CalendarPipe.timer) {\r\n            window.clearTimeout(CalendarPipe.timer);\r\n            CalendarPipe.timer = null;\r\n            CalendarPipe.midnight = null;\r\n        }\r\n    }\r\n    static _getMillisecondsUntilUpdate() {\r\n        const now = moment();\r\n        const tomorrow = moment().startOf('day').add(1, 'days');\r\n        const timeToMidnight = tomorrow.valueOf() - now.valueOf();\r\n        return timeToMidnight + 1000; // 1 second after midnight\r\n    }\r\n}\r\n/**\r\n * Internal reference counter, so we can clean up when no instances are in use\r\n */\r\nCalendarPipe.refs = 0;\r\nCalendarPipe.timer = null;\r\nCalendarPipe.midnight = null;\r\nCalendarPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CalendarPipe, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CalendarPipe, name: \"amCalendar\", pure: false });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CalendarPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amCalendar', pure: false }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; } });\n\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\nclass DateFormatPipe {\r\n    transform(value, ...args) {\r\n        if (!value) {\r\n            return '';\r\n        }\r\n        return moment(value).format(args[0]);\r\n    }\r\n}\r\nDateFormatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DateFormatPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nDateFormatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DateFormatPipe, name: \"amDateFormat\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DateFormatPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amDateFormat' }]\r\n        }] });\n\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\nclass DifferencePipe {\r\n    transform(value, otherValue, unit, precision) {\r\n        const date = moment(value);\r\n        const date2 = otherValue !== null ? moment(otherValue) : moment();\r\n        return date.diff(date2, unit, precision);\r\n    }\r\n}\r\nDifferencePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DifferencePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nDifferencePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DifferencePipe, name: \"amDifference\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DifferencePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amDifference' }]\r\n        }] });\n\nconst NGX_MOMENT_OPTIONS = new InjectionToken('NGX_MOMENT_OPTIONS');\n\nclass DurationPipe {\r\n    constructor(momentOptions) {\r\n        this.allowedUnits = ['ss', 's', 'm', 'h', 'd', 'M'];\r\n        this._applyOptions(momentOptions);\r\n    }\r\n    transform(value, ...args) {\r\n        if (typeof args === 'undefined' || args.length !== 1) {\r\n            throw new Error('DurationPipe: missing required time unit argument');\r\n        }\r\n        return moment.duration(value, args[0]).humanize();\r\n    }\r\n    _applyOptions(momentOptions) {\r\n        if (!momentOptions) {\r\n            return;\r\n        }\r\n        if (!!momentOptions.relativeTimeThresholdOptions) {\r\n            const units = Object.keys(momentOptions.relativeTimeThresholdOptions);\r\n            const filteredUnits = units.filter((unit) => this.allowedUnits.indexOf(unit) !== -1);\r\n            filteredUnits.forEach((unit) => {\r\n                moment.relativeTimeThreshold(unit, momentOptions.relativeTimeThresholdOptions[unit]);\r\n            });\r\n        }\r\n    }\r\n}\r\nDurationPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DurationPipe, deps: [{ token: NGX_MOMENT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Pipe });\r\nDurationPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DurationPipe, name: \"amDuration\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DurationPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amDuration' }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [NGX_MOMENT_OPTIONS]\r\n                    }] }];\r\n    } });\n\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\nclass FromUnixPipe {\r\n    transform(value, ...args) {\r\n        return typeof value === 'string' ? moment.unix(parseInt(value, 10)) : moment.unix(value);\r\n    }\r\n}\r\nFromUnixPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FromUnixPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nFromUnixPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FromUnixPipe, name: \"amFromUnix\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FromUnixPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amFromUnix' }]\r\n        }] });\n\nclass ParsePipe {\r\n    transform(value, formats) {\r\n        return moment(value, formats);\r\n    }\r\n}\r\nParsePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ParsePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nParsePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ParsePipe, name: \"amParse\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ParsePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amParse' }]\r\n        }] });\n\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\nclass FromUtcPipe {\r\n    transform(value, formats, ...args) {\r\n        return formats ? moment.utc(value, formats) : moment.utc(value);\r\n    }\r\n}\r\nFromUtcPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FromUtcPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nFromUtcPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FromUtcPipe, name: \"amFromUtc\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FromUtcPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amFromUtc' }]\r\n        }] });\n\nclass IsAfterPipe {\r\n    transform(value, otherValue, unit) {\r\n        return moment(value).isAfter(moment(otherValue), unit);\r\n    }\r\n}\r\nIsAfterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: IsAfterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nIsAfterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: IsAfterPipe, name: \"amIsAfter\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: IsAfterPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'amIsAfter',\r\n                }]\r\n        }] });\n\nclass IsBeforePipe {\r\n    transform(value, otherValue, unit) {\r\n        return moment(value).isBefore(moment(otherValue), unit);\r\n    }\r\n}\r\nIsBeforePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: IsBeforePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nIsBeforePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: IsBeforePipe, name: \"amIsBefore\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: IsBeforePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'amIsBefore',\r\n                }]\r\n        }] });\n\nclass LocalTimePipe {\r\n    transform(value) {\r\n        return moment(value).local();\r\n    }\r\n}\r\nLocalTimePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LocalTimePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nLocalTimePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LocalTimePipe, name: \"amLocal\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LocalTimePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amLocal' }]\r\n        }] });\n\nclass LocalePipe {\r\n    transform(value, locale) {\r\n        return moment(value).locale(locale);\r\n    }\r\n}\r\nLocalePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LocalePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nLocalePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LocalePipe, name: \"amLocale\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LocalePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amLocale' }]\r\n        }] });\n\nclass ParseZonePipe {\r\n    transform(value) {\r\n        return moment.parseZone(value);\r\n    }\r\n}\r\nParseZonePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ParseZonePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nParseZonePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ParseZonePipe, name: \"amParseZone\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ParseZonePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amParseZone' }]\r\n        }] });\n\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\nclass SubtractPipe {\r\n    transform(value, amount, unit) {\r\n        if (typeof amount === 'undefined' ||\r\n            (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('SubtractPipe: missing required arguments');\r\n        }\r\n        return moment(value).subtract(amount, unit);\r\n    }\r\n}\r\nSubtractPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SubtractPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nSubtractPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SubtractPipe, name: \"amSubtract\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SubtractPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amSubtract' }]\r\n        }] });\n\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\nclass TimeAgoPipe {\r\n    constructor(cdRef, ngZone) {\r\n        this.cdRef = cdRef;\r\n        this.ngZone = ngZone;\r\n    }\r\n    format(m) {\r\n        return m.from(moment(), this.lastOmitSuffix);\r\n    }\r\n    transform(value, omitSuffix, formatFn) {\r\n        if (this.hasChanged(value, omitSuffix)) {\r\n            this.lastTime = this.getTime(value);\r\n            this.lastValue = value;\r\n            this.lastOmitSuffix = omitSuffix;\r\n            this.lastLocale = this.getLocale(value);\r\n            this.formatFn = formatFn || this.format.bind(this);\r\n            this.removeTimer();\r\n            this.createTimer();\r\n            this.lastText = this.formatFn(moment(value));\r\n        }\r\n        else {\r\n            this.createTimer();\r\n        }\r\n        return this.lastText;\r\n    }\r\n    ngOnDestroy() {\r\n        this.removeTimer();\r\n    }\r\n    createTimer() {\r\n        if (this.currentTimer) {\r\n            return;\r\n        }\r\n        const momentInstance = moment(this.lastValue);\r\n        const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\r\n        this.currentTimer = this.ngZone.runOutsideAngular(() => {\r\n            if (typeof window !== 'undefined') {\r\n                return window.setTimeout(() => {\r\n                    this.lastText = this.formatFn(moment(this.lastValue));\r\n                    this.currentTimer = null;\r\n                    this.ngZone.run(() => this.cdRef.markForCheck());\r\n                }, timeToUpdate);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        });\r\n    }\r\n    removeTimer() {\r\n        if (this.currentTimer) {\r\n            window.clearTimeout(this.currentTimer);\r\n            this.currentTimer = null;\r\n        }\r\n    }\r\n    getSecondsUntilUpdate(momentInstance) {\r\n        const howOld = Math.abs(moment().diff(momentInstance, 'minute'));\r\n        if (howOld < 1) {\r\n            return 1;\r\n        }\r\n        else if (howOld < 60) {\r\n            return 30;\r\n        }\r\n        else if (howOld < 180) {\r\n            return 300;\r\n        }\r\n        else {\r\n            return 3600;\r\n        }\r\n    }\r\n    hasChanged(value, omitSuffix) {\r\n        return (this.getTime(value) !== this.lastTime ||\r\n            this.getLocale(value) !== this.lastLocale ||\r\n            omitSuffix !== this.lastOmitSuffix);\r\n    }\r\n    getTime(value) {\r\n        if (moment.isDate(value)) {\r\n            return value.getTime();\r\n        }\r\n        else if (moment.isMoment(value)) {\r\n            return value.valueOf();\r\n        }\r\n        else {\r\n            return moment(value).valueOf();\r\n        }\r\n    }\r\n    getLocale(value) {\r\n        return moment.isMoment(value) ? value.locale() : moment.locale();\r\n    }\r\n}\r\nTimeAgoPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TimeAgoPipe, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Pipe });\r\nTimeAgoPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TimeAgoPipe, name: \"amTimeAgo\", pure: false });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TimeAgoPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amTimeAgo', pure: false }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; } });\n\nclass UtcPipe {\r\n    transform(value) {\r\n        return moment(value).utc();\r\n    }\r\n}\r\nUtcPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: UtcPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\r\nUtcPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: UtcPipe, name: \"amUtc\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: UtcPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{ name: 'amUtc' }]\r\n        }] });\n\nconst ANGULAR_MOMENT_PIPES = [\r\n    AddPipe,\r\n    CalendarPipe,\r\n    DateFormatPipe,\r\n    DifferencePipe,\r\n    DurationPipe,\r\n    FromUnixPipe,\r\n    ParsePipe,\r\n    SubtractPipe,\r\n    TimeAgoPipe,\r\n    UtcPipe,\r\n    FromUtcPipe,\r\n    LocalTimePipe,\r\n    LocalePipe,\r\n    ParseZonePipe,\r\n    IsBeforePipe,\r\n    IsAfterPipe,\r\n];\r\nclass MomentModule {\r\n    static forRoot(options) {\r\n        return {\r\n            ngModule: MomentModule,\r\n            providers: [\r\n                {\r\n                    provide: NGX_MOMENT_OPTIONS,\r\n                    useValue: Object.assign({}, options),\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\nMomentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MomentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nMomentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MomentModule, declarations: [AddPipe,\r\n        CalendarPipe,\r\n        DateFormatPipe,\r\n        DifferencePipe,\r\n        DurationPipe,\r\n        FromUnixPipe,\r\n        ParsePipe,\r\n        SubtractPipe,\r\n        TimeAgoPipe,\r\n        UtcPipe,\r\n        FromUtcPipe,\r\n        LocalTimePipe,\r\n        LocalePipe,\r\n        ParseZonePipe,\r\n        IsBeforePipe,\r\n        IsAfterPipe], exports: [AddPipe,\r\n        CalendarPipe,\r\n        DateFormatPipe,\r\n        DifferencePipe,\r\n        DurationPipe,\r\n        FromUnixPipe,\r\n        ParsePipe,\r\n        SubtractPipe,\r\n        TimeAgoPipe,\r\n        UtcPipe,\r\n        FromUtcPipe,\r\n        LocalTimePipe,\r\n        LocalePipe,\r\n        ParseZonePipe,\r\n        IsBeforePipe,\r\n        IsAfterPipe] });\r\nMomentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MomentModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MomentModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: ANGULAR_MOMENT_PIPES,\r\n                    exports: ANGULAR_MOMENT_PIPES,\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AddPipe, CalendarPipe, DateFormatPipe, DifferencePipe, DurationPipe, FromUnixPipe, FromUtcPipe, IsAfterPipe, IsBeforePipe, LocalTimePipe, LocalePipe, MomentModule, NGX_MOMENT_OPTIONS, ParsePipe, ParseZonePipe, SubtractPipe, TimeAgoPipe, UtcPipe };\n"]},"metadata":{},"sourceType":"module"}