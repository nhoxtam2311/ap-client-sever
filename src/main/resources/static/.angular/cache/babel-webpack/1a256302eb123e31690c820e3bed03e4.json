{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TaskService = /*#__PURE__*/(() => {\n  class TaskService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAll(sortBy, sortDesc) {\n      return this.http.get(`api/tasks?&sort=${sortBy},${sortDesc}`);\n    }\n\n    create(task) {\n      return this.http.post(`api/tasks`, task);\n    }\n\n    getTask(taskId) {\n      return this.http.get(`api/tasks/${taskId}`);\n    }\n\n    updateTask(task) {\n      return this.http.put(`${task._links.self.href.replace('8080', '4200')}`, task);\n    }\n\n    findByProject(projectId, page, sortBy, sortDesc) {\n      return this.http.get(`api/tasks/search/findByProject?project=${projectId}&page=${page}&size=10&sort=${sortBy},${sortDesc}`);\n    }\n\n    findByParent(parentId, page, sortBy, sortDesc) {\n      return this.http.get(`api/tasks/search/findByParent?parent=${parentId}&page=${page}&size=10&sort=${sortBy},${sortDesc}`);\n    }\n\n    findByAssignedTo(employeeId, page, sortBy, sortDesc) {\n      return this.http.get(`api/tasks/search/findByAssignedTo?assignedTo=${employeeId}&page=${page}&size=10&sort=${sortBy},${sortDesc}`);\n    }\n\n    findByStatus(status, sortBy, sortDesc) {\n      return this.http.get(`api/tasks/search/findByStatus?status=${status}&sort=${sortBy},${sortDesc}`);\n    }\n\n    findByCreatedDate(year, month, sortBy, sortDesc) {\n      return this.http.get(`api/tasks/search/findByCreatedDateBetween?after=${year}-${month}-01&before=${year}-${month}-31&sort=${sortBy},${sortDesc}`);\n    }\n\n  }\n\n  TaskService.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n  return TaskService;\n})();","map":null,"metadata":{},"sourceType":"module"}